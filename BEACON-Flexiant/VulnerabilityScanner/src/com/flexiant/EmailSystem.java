package com.flexiant;

import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.*;
import javax.mail.internet.*;

public class EmailSystem {
	
	final String username = "beaconvulnerabiltyscanner@gmail.com";
	final String emailpassword = "xxxx";
	Logger LOGGER;
	
	public EmailSystem(Logger LOGGER) {
		this.LOGGER = LOGGER;
	}

	public void sendEmail(String serverUUID, String ip, String emailID) {
		LOGGER.log(Level.FINE, "Setting up E-Mail Instance");
		
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");
		
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, emailpassword);
			}
		});

		try {
			LOGGER.log(Level.FINE, "Creating EMail message");
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("beaconvulnerabiltyscanner@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse("madhuri.flexiant@gmail.com"));
			message.setSubject("BEACON-Vulnerability Scanner Report for IP -" + ip);
			message.setText("Hello,"
				+ "\nPlease find the attached scan report for the Server IP -" + ip);
			
			LOGGER.log(Level.FINE, "Creating an attachment for the EMail message");
			BodyPart messageBodyPart = new MimeBodyPart();
	        
	        Multipart multipart = new MimeMultipart();
	        multipart.addBodyPart(messageBodyPart);
	        messageBodyPart = new MimeBodyPart();
	        String filename = "/home/ubuntu/reports/" + ip + ".xml";
	        DataSource source = new FileDataSource(filename);
	        messageBodyPart.setDataHandler(new DataHandler(source));
	        messageBodyPart.setFileName(filename);
	        LOGGER.log(Level.FINE, "Attaching the report");
	        multipart.addBodyPart(messageBodyPart);
 
	        message.setContent(multipart);
	        LOGGER.log(Level.INFO, "Sending the EMail");
			Transport.send(message);
			
		} catch (MessagingException e) {
			LOGGER.log(Level.SEVERE, "Failed to send an EMail, error occured - ", e);
		}
	}
}
