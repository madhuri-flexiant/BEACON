package com.flexiant;

import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.*;
import javax.mail.internet.*;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public class EmailSystem {
	
	final String username = "beaconvulnerabiltyscanner@gmail.com";
	final String emailpassword = "";
	
	private static Logger LOGGER = LogManager.getLogger(EmailSystem.class);

	public void sendTaskSuccessEmail(String serverUUID, String fileName, String ip, String emailID) {
		LOGGER.info("The task has been successful - send an email with the report");
		LOGGER.info("Setting up E-Mail Instance");
		
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");
		
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, emailpassword);
			}
		});

		try {
			LOGGER.info("Creating EMail message");
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("beaconvulnerabiltyscanner@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				//InternetAddress.parse("madhuri.flexiant@gmail.com"));
					InternetAddress.parse(emailID));
			message.setSubject("BEACON-Vulnerability Scanner Report for IP - " + ip);
			message.setText("Hello,"
				+ "\nPlease find the attached scan report for: \n Server IP - " + ip
				+ "\n Server UUID - " + serverUUID);
			
			LOGGER.info("Creating an attachment for the EMail message");

			BodyPart messageBodyPart = new MimeBodyPart();
	        messageBodyPart.setText("Hello,"
				+ "\nPlease find the attached scan report for the Server IP -" + ip);
	        Multipart multipart = new MimeMultipart();
	        multipart.addBodyPart(messageBodyPart);
	        messageBodyPart = new MimeBodyPart();
	        //String filename = ExecuteScan.PATH_TO_REPORTS + ip + ".xml";
	        DataSource source = new FileDataSource(fileName);
	        messageBodyPart.setDataHandler(new DataHandler(source));
	        messageBodyPart.setFileName(fileName);
	        messageBodyPart.setHeader("Content-Type=text/plain; charset=\"us-ascii\"", fileName);
	        LOGGER.info("Attaching the report");
	        multipart.addBodyPart(messageBodyPart);
 
	        message.setContent(multipart);
	        LOGGER.info("Sending the EMail to " + emailID);
			Transport.send(message);
			
		} catch (MessagingException e) {
			LOGGER.error("Failed to send an EMail, error occured - ", e);
		}
	}
	
	public void sendTaskFailedEmail(String serverUUID, String ip, String emailID) {
		LOGGER.info("The task has failed, send failure message");
		LOGGER.info("Setting up E-Mail Instance");
		
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");
		
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, emailpassword);
			}
		});

		try {
			LOGGER.info("Creating EMail message");
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("beaconvulnerabiltyscanner@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				//InternetAddress.parse("madhuri.flexiant@gmail.com"));
					InternetAddress.parse(emailID));
			message.setSubject("BEACON-Vulnerability Scanner Failed for IP - " + ip);
			message.setText("Hello,"
				+ "\nThe task to run the scan failed for: \n Server IP - " + ip + "\n Server UUID - " + serverUUID);
			
	        LOGGER.info("Sending the EMail");
			Transport.send(message);
			
		} catch (MessagingException e) {
			LOGGER.error("Failed to send an EMail, error occured - ", e);
		}
	}
}
